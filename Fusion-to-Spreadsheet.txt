var tableList = ['2971532','2971532','2971532','2971532']; // Add the table ID of the fusion table here
var rangeName = 'updateSpreadsheet'
    
function onOpen() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var menuEntries = [ {name: "Update Spreadsheet", functionName: "masterSpreadsheet"}, 
                      {name: "Change Email Information", functionName: "fixEmail"},
                      {name: "Select Cell Where Import Starts (This will be the line with headers)", functionName: "setRangeUpdateSpread"}];
  ss.addMenu("Fusion to Spreadsheet", menuEntries);
}

function masterSpreadsheet() {
  var email = UserProperties.getProperty('email');
  var password = UserProperties.getProperty('password');

  if (email === null || password === null) {
    email = Browser.inputBox('Enter email');
    password = Browser.inputBox('Enter password');
    UserProperties.setProperty('email',email);
    UserProperties.setProperty('password', password);
  } else {
    email = UserProperties.getProperty('email');
    password = UserProperties.getProperty('password');
  }
  
  var authToken = getGAauthenticationToken(email,password);
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = ss.getSheetByName("Fusion to Spreadsheet");
  var namedRange = ss.getRangeByName(rangeName)
  var strow = namedRange.getRow()
  var stcolumn = namedRange.getColumn()
  for (var i = 0; i < tableList.length; ++i) {
    //get table info
    var responseCsv = selectData(tableList[i],authToken);    
    //parse the CSV and setValues
    var resParse  = CSVParse(responseCsv.getContentText());
    var length = resParse.length;
    resParse.splice(length - 1, 1)
    length = length - 1;
    if (i>0){
      resParse.splice(0, 1)
      length = length - 1;
    }
    var width = resParse[0].length;
    var range = sheet.getRange(strow, stcolumn, length, width);
    range.setValues(resParse);
    strow = strow + length;
  }
}



//Select data from Table
function selectData(tableID,authToken) {
  var query = encodeURIComponent("SELECT * FROM " + tableID);
  var URL = "http://www.google.com/fusiontables/api/query?sql=" + query;

  var responseCsv = UrlFetchApp.fetch(URL, {
     method: "get",
     headers: {
          "Authorization": "GoogleLogin auth=" + authToken,
     }
  });
  return responseCsv;
}


//Google Authentication API
function getGAauthenticationToken(email, password) {
  password = encodeURIComponent(password);
  var response = UrlFetchApp.fetch("https://www.google.com/accounts/ClientLogin", {
    method: "post",
    payload: "accountType=GOOGLE&Email=" + email + "&Passwd=" + password + "&service=fusiontables&Source=testing"
  });
  var responseStr = response.getContentText();
  responseStr = responseStr.slice(responseStr.search("Auth=") + 5, responseStr.length);
  responseStr = responseStr.replace(/\n/g, "");
  return responseStr;
}




//Parse the CSV File
function CSVParse(strData, strDelimiter){
  // Check to see if the delimiter is defined. If not,
  // then default to comma.
  strDelimiter = (strDelimiter || ",");

  // Create a regular expression to parse the CSV values.
  var objPattern = new RegExp(
    (
      // Delimiters.
      "(\\" + strDelimiter + "|\\r?\\n|\\r|^)" +

      // Quoted fields.
      "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +

      // Standard fields.
      "([^\"\\" + strDelimiter + "\\r\\n]*))"
    ),
    "gi"
  );

  var arrData = [[]];
  var arrMatches = null;
  while (arrMatches = objPattern.exec( strData )){
    var strMatchedDelimiter = arrMatches[ 1 ];
    if (
      strMatchedDelimiter.length &&
      (strMatchedDelimiter != strDelimiter)
    ){
      arrData.push( [] );
    }

    if (arrMatches[ 2 ]){
      var strMatchedValue = arrMatches[ 2 ].replace(
        new RegExp( "\"\"", "g" ),
        "\""
      );

    } else {
      var strMatchedValue = arrMatches[ 3 ];
    }
    arrData[ arrData.length - 1 ].push( strMatchedValue );
  }

  // Return the parsed data.
  return( arrData );
}




//change email if needed
function fixEmail() {
   var decision = Browser.msgBox("WARNING", "Are you sure you want to change your email?", Browser.Buttons.YES_NO);
   if (decision == 'yes'){
     var email = Browser.inputBox('Enter email');
     var password = Browser.inputBox('Enter password');
     UserProperties.setProperty('email',email);
     UserProperties.setProperty('password', password);
   }
}




//set cell start range
function setRangeUpdateSpread() {
   var decision = Browser.msgBox("WARNING", "Are you sure you want to change the start cell to Update the Spreadsheet?", Browser.Buttons.YES_NO);
   if (decision == 'yes'){
     var ss = SpreadsheetApp.getActiveSpreadsheet();
     var check = ss.getRangeByName(rangeName)
         if (check != null) {
           ss.removeNamedRange(rangeName);
         }
     var range = SpreadsheetApp.getActiveRange()
     ss.setNamedRange(rangeName, range);
     Browser.msgBox("WARNING", "The range \'" + rangeName + "\' used to send data to Fusion has been changed.", Browser.Buttons.OK);
   }
}